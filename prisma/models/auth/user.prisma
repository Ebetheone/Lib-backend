model User {
    id     String  @id @default(auto()) @map("_id") @db.ObjectId
    userId String? @unique

    role   UserRoleEnum    @default(USER)
    status UserStatusEnum?

    password String?

    email            String? @unique
    emailConfirmCode String?
    isEmailConfirmed Boolean @default(false)

    countryCode String? @default("976")

    phone            String?
    phoneConfirmCode String?
    isPhoneConfirmed Boolean @default(false)

    profile  UserProfile?  @relation(name: "UserToUserProfile")
    accounts UserAccount[]
    devices  UserDevice[]
    sessions UserSession[]
    books    Book[]

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    createdUserId String?
    updatedUserId String?

    @@unique([countryCode, phone])
}

model UserProfile {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    user   User   @relation(name: "UserToUserProfile", fields: [userId], references: [id])
    userId String @unique @db.ObjectId

    firstName String?
    lastName  String?

    gender   Gender?   @default(NONE)
    birthday DateTime?

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    createdUserId String?
    updatedUserId String?
}

enum Gender {
    NONE
    MALE
    FEMALE
}

enum UserRoleEnum {
    ADMIN
    USER
}

enum UserStatusEnum {
    ACTIVE
    INACTIVE
}
