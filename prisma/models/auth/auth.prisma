model UserAccount {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    user   User?   @relation(fields: [userId], references: [id])
    userId String? @db.ObjectId

    userUid String? @db.ObjectId

    providerName      String?
    providerType      AccountProviderTypeEnum @default(NONE)
    providerId        String?                 @db.ObjectId
    providerAccountId String?                 @db.ObjectId

    refreshToken       String?
    accessToken        String?
    accessTokenExpires DateTime?

    signedIn DateTime @default(now())

    createdAt     DateTime @default(now())
    updatedAt     DateTime @updatedAt
    createdUserId String?  @db.ObjectId
    updatedUserId String?  @db.ObjectId

    @@unique([providerId, providerAccountId])
}

model UserDevice {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    user   User   @relation(fields: [userId], references: [id])
    userId String @db.ObjectId

    deviceOs   String
    deviceType String
    deviceName String

    isActive Boolean @default(true)

    sessions UserSession[]
}

model UserSession {
    id String @id @default(auto()) @map("_id") @db.ObjectId

    user   User   @relation(fields: [userId], references: [id])
    userId String @db.ObjectId

    device   UserDevice @relation(fields: [deviceId], references: [id])
    deviceId String     @db.ObjectId

    fcmToken String?

    isActive Boolean @default(true)
    expires  String

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

enum AccountProviderTypeEnum {
    NONE
    EMAIL
    PHONE
    FACEBOOK
    APPLE
    GOOGLE
    TWITTER
}
